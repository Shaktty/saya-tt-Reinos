#CLASS {RL_MOVEMENT_HANDLER} {kill};
#CLASS {RL_MOVEMENT_HANDLER} {open};

#NOP === Core Configuration ===
#VAR {movement_handler} {
    {current_mode} {normal}
    {modes} {
        {normal} {
            {name} {Normal}
            {color} {<128>}
            {prefix} {}
        }
        {stealth} {
            {name} {Sigilo}
            {color} {<138>}
            {prefix} {sigilar }
        }
        {combat} {
            {name} {XP}
            {color} {<118>}
            {prefix} {}
            {special_keys} {
                {l} {jj}
                {m} {j}
                {u} {k}
            }
        }
        {tree} {
            {name} {Copas}
            {color} {<148>}
            {prefix} {saltar }
        }
    }
}

#NOP === Direction Mapping ===
#VAR {movement_map} {
    {basic} {
        {l} {abajo}
        {m} {arriba}
        {n} {estado todos}
        {o} {fuera}
        {p} {dentro}
        {q} {sudoeste}
        {r} {sur}
        {s} {sudeste}
        {t} {oeste}
        {u} {ojear}
        {v} {este}
        {w} {noroeste}
        {x} {norte}
        {y} {noreste}
    }
    {short} {
        {norte} {n}
        {sur} {s}
        {este} {e}
        {oeste} {o}
        {noreste} {ne}
        {noroeste} {no}
        {sudeste} {se}
        {sudoeste} {so}
        {arriba} {ar}
        {abajo} {ab}
        {dentro} {de}
        {fuera} {fu}
    }
}
#NOP === Add to RL_MOVEMENT_HANDLER ===
#FUNCTION {process_movement_with_validation} {
    #LOCAL {dir} {@normalizeDirection{%1}};
    #IF {@isValidDirection{$dir}} {
        #RETURN {@process_movement{$dir}};
    };
    #RETURN {#NOP};
}
#NOP === Command Processing ===
#FUNCTION {process_movement} {
    #VAR {current_mode} {$movement_handler[current_mode]};
    #VAR {key} {%1};

    #IF {"$current_mode" == "combat" && "$movement_handler[modes][combat][special_keys][$key]" != ""} {
        #RETURN {$movement_handler[modes][combat][special_keys][$key]};
    };

    #VAR {direction} {$movement_map[basic][$key]};
    #IF {"$direction" == ""} {
        #RETURN {#NOP};
    };

    #FORMAT {command} {%s%s} {$movement_handler[modes][$current_mode][prefix]} {$direction};
    #RETURN {$command};
}

#NOP === Mode Switching ===
#ALIAS {modo_normal} {
    #VAR {movement_handler[current_mode]} {normal};
    #SHOWME {$movement_handler[modes][normal][color]Modo movimiento normal activado<099>};
}

#ALIAS {modo_sigilo} {
    #VAR {movement_handler[current_mode]} {stealth};
    #SHOWME {$movement_handler[modes][stealth][color]Modo sigilo activado<099>};
}

#ALIAS {modo_xp} {
    #VAR {movement_handler[current_mode]} {combat};
    #SHOWME {$movement_handler[modes][combat][color]Modo combate activado<099>};
}

#ALIAS {modo_copas} {
    #VAR {movement_handler[current_mode]} {tree};
    #SHOWME {$movement_handler[modes][tree][color]Modo copas activado<099>};
}

#NOP === Numpad Key Handlers ===
#FUNCTION {handle_numpad_key} {
    #VAR {command} {@process_movement_with_validation{%1}};
    #IF {"$command" != "#NOP"} {
        #RETURN {$command};
    };
    #RETURN {#NOP};
}

#NOP === Standard Numpad ===
#MACRO {\eOl} {#VAR {result} {@handle_numpad_key{l}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOm} {#VAR {result} {@handle_numpad_key{m}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOn} {#VAR {result} {@handle_numpad_key{n}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOo} {#VAR {result} {@handle_numpad_key{o}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOp} {#VAR {result} {@handle_numpad_key{p}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOq} {#VAR {result} {@handle_numpad_key{q}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOr} {#VAR {result} {@handle_numpad_key{r}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOs} {#VAR {result} {@handle_numpad_key{s}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOt} {#VAR {result} {@handle_numpad_key{t}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOu} {#VAR {result} {@handle_numpad_key{u}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOv} {#VAR {result} {@handle_numpad_key{v}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOw} {#VAR {result} {@handle_numpad_key{w}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOx} {#VAR {result} {@handle_numpad_key{x}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eOy} {#VAR {result} {@handle_numpad_key{y}}; #IF {"$result" != "#NOP"} {$result};}

#NOP === Shift+Numpad (Alternative mode) ===
#MACRO {\eO2l} {#VAR {result} {@handle_numpad_key{l}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eO2j} {#VAR {result} {@handle_numpad_key{m}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eO2p} {#VAR {result} {@handle_numpad_key{n}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eO2n} {#VAR {result} {@handle_numpad_key{u}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eO2m} {#VAR {result} {@handle_numpad_key{j}}; #IF {"$result" != "#NOP"} {$result};}
#MACRO {\eO2k} {#VAR {result} {@handle_numpad_key{k}}; #IF {"$result" != "#NOP"} {$result};}

#NOP === Integration with PathWalker ===
#FUNCTION {get_short_direction} {
    #RETURN {$movement_map[short][%1]};
}

#FUNCTION {get_opposite_direction} {
    #LOCAL {dir} {@get_short_direction{%1}};
    #RETURN {@oppositeDirection{$dir}};
}

#NOP === Initialize ===
#ALIAS {init_movement} {
    modo_normal;
    #SHOWME {<128>Sistema de movimiento inicializado<099>};
}

init_movement;

#CLASS {RL_MOVEMENT_HANDLER} {close};
